'use strict';

var fs = global.fs = global.fs || require('fs');
var path = global.path = global.path || require('path');
var gulp = global.gulp = global.gulp || require('gulp');
var common = global.config = global.config || require('../utils/common.js');
var apiGenerator = require('../generators/api-generator.js');
var simpleGit = global.simpleGit = global.simpleGit || require('simple-git');

var localpath = './ej2-docs/src/';
var currentPackage = common.currentPackage;

gulp.task('local-api', function() {
    apiGenerator.generateApi('./ej2-docs/src/');
});
/**
 * publish typedoc contents
 */
gulp.task('publish-api', function(done) {
    if (!fs.existsSync('./ej2-docs')) {
        fs.mkdirSync('./ej2-docs');

        var user = process.env.GITLAB_USER;
        var token = process.env.GITLAB_TOKEN;
        var stageBranch = common.isMasterBranch ? 'master' : common.stagingBranch;
        var ej2docRepo = 'https://' + user + ':' + token + '@gitlab.syncfusion.com/essential-studio/ej2-docs.git';
        simpleGit().clone(ej2docRepo, './ej2-docs', function(err) {
            if (err) {
                done(err);
                return;
            }
        }).then(function() {
            simpleGit('./ej2-docs').checkout(stageBranch, function(err) {
                if (err) {
                    done(err);
                    return;
                }
                if(fs.existsSync(path.resolve('./CHANGELOG.md'))){
                    var releaseNotes = require('../publish/release-notes.js');
                    var localMDStr = fs.readFileSync(path.resolve('./CHANGELOG.md'), 'utf-8');
                    var isGenerated = new releaseNotes().generateReleaseNotes(localMDStr);
                    console.log(isGenerated ? 'release notes publishing succeeded' : 'there is no release notes available');
                }
                apiGenerator.clearComponentFolder(localpath);
                // create api md files from typedoc
                if (apiGenerator.generateApi(localpath)) {
                    // push updated ej2-docs content to gitlab
                    simpleGit('./ej2-docs').init()
                        .add('./*')
                        .commit('documentation(EJ2-000): ' + currentPackage + ' - api content published')
                        .pull(stageBranch)
                        .push(ej2docRepo, stageBranch, function() {
                            console.log(currentPackage + ' - ej2 docs api content published');
                            done();
                        });
                } else {
                    done();
                }
            });
        });
    } else {
        done();
        return;
    }
});