'use strict';

var gulp = global.gulp = global.gulp || require('gulp');
var shelljs = global.shelljs = global.shelljs || require('shelljs');
var common = global.config = global.config || require('../utils/common.js');
var publish = require('./base.js');
var fs = global.fs = global.fs || require('fs');
var path = global.path = global.path || require('path');

/**
 * Publish npm production packages
 */
gulp.task('publish-production', ['production-ignore', 'production-registry'], function(done) {
    if (common.currentRepo === 'ej2-build-tasks') {
        publish.shipSrc('./src/services/**/*', './');
    }
    shelljs.exec('npm publish');
    if(common.isMasterBranch){
        var user = process.env.GITLAB_USER;
        var token = process.env.GITLAB_TOKEN;
        var origin = 'http://' + user + ':' + token + '@gitlab.syncfusion.com/essential-studio/' + common.currentRepo + '.git';
        shelljs.exec('git remote set-url origin ' + origin + ' && git pull origin master');
        if (fs.existsSync(path.resolve('./current-api.json'))) {
            let apipath = path.resolve('./api.json');
            let json = JSON.stringify(require(path.resolve('./current-api.json')), null, '\t');
            fs.writeFileSync(apipath, json, 'utf-8');
        }
        shelljs.exec('git add -f api.json ');
        shelljs.exec('git commit -m \"config(EJ2-000): api json included" --no-verify');
        shelljs.exec('git branch -f master HEAD && git checkout master', shellDone);
        shelljs.exec('git push -f --set-upstream origin master --no-verify', { silent: true }, function(exitCode) {
            done();
            shellDone(exitCode);
        });
    }
    else{
        done();
    }
});

function shellDone(exitCode) {
    if (exitCode !== 0) {
        process.exit(1);
    }
}

/**
 * Create npmignore at root for production packages
 */
gulp.task('production-ignore', function() {
    return publish.createNpmIgnore(common.currentRepo, true);
});
