import * as React from 'react';
import { {{baseClass}}, {{baseClass}}Model } from '{{packageName}}';
import { ComponentBase, applyMixins, DefaultHtmlAttributes } from '@syncfusion/ej2-react-base';

{{controlAttributes}}

{{componentComments}}
export class {{baseClass}}Component extends {{baseClass}} {
    public state: Readonly<{ children?: React.ReactNode | React.ReactNode[] }> 
    & Readonly<{{baseClass}}Model & DefaultHtmlAttributes{{attributeInterface}}>;
    public setState: any;{{attributemapper}}
    private getDefaultAttributes: Function;{{skipRefresh}}
    public initRenderCalled: boolean = false;
    private checkInjectedModules: boolean = {{hasInjected}};{{directiveKeys}}
    public props: Readonly<{ children?: React.ReactNode | React.ReactNode[] }>
     & Readonly<{{baseClass}}Model & DefaultHtmlAttributes{{attributeInterface}}>;
    public forceUpdate: (callBack?: () => any) => void;
    public context: Object;
    public isReactComponent: Object;
    public refs: {
        [key: string]: React.ReactInstance
    };

    constructor(props: any) {
        super(props);
        this.state = props;
    }

    public render(): any {
        if ((this.element && !this.initRenderCalled) || this.refreshing) {
            super.render();
            this.initRenderCalled = true;
        } else {
            return React.createElement('{{tagName}}', this.getDefaultAttributes(){{childDecider}});
        }

    }
}

applyMixins({{baseClass}}Component, [ComponentBase, React.PureComponent]);
